openapi: 3.0.0
info:
  version: "0.0.2"
  title: '(WIP) IPFS Pinning Service API'
  description: "
<h1>Overview</h1>
<p>The IPFS Pinning Service API is intended to be an implementation-agnostic API&#x3a;</p>
<ul>
<li>For use and implementation by pinning service providers</li>
<li>For use in client mode by IPFS nodes and GUI-based applications</li>
</ul>
<h3>This spec is a work in progress! &#127959;</h3>
<p><strong>Your input and feedback are welcome and valuable as we develop this API spec. Please join the design discussion at <a href=\"https://github.com/ipfs/pinning-services-api-spec\">github.com/ipfs/pinning-services-api-spec</a>.</strong></p>
<h1>The pin object lifecycle</h1>
<h2>Creating a new pin object</h2>
<p>The user creates a pin object via <code>POST /pins</code> and receives a <code>PinStatus</code> response&#x3a;</p>
<ul>
<li><code>id</code> in <code>PinStatus</code> is <code>cid-of-pin-object</code>, which can can be used for modifying and/or removing the pin in the future</li>
<li><code>status</code> in <code>PinStatus</code> indicates the current state of a pin</li>
</ul>
<h3>Checking status of in-progress pinning</h3>
<p><code>status</code> (in <code>PinStatus</code>) may indicate a pending state. This means the data behind <code>Pin.cid</code> was not found on the pinning service and is being fetched from the IPFS network at large, which may take time.</p>
<p>In this case, the user can periodically check pinning progress via <code>GET /pins/{cid-of-pin-object}</code> until pinning is successful, or the user decides to remove the pending pin.</p>
<h2>Modifying an existing pin object</h2>
<p>The user can modify an existing pin object via <code>POST /pins/{cid-of-pin-object}</code>. The new pin object <code>id</code> is returned in the <code>PinStatus</code> response. The old pin object is deleted automatically.</p>
<h2>Removing a pin object</h2>
<p>A pin object can be removed via <code>DELETE /pins/{cid-of-pin-object}</code>.</p>
<h1>Custom metadata</h1>
<p>Pinning services are encouraged to add support for additional features by leveraging the following optional <code>meta</code> attributes. Note that it is OK to ommit or ignore <code>meta</code> attributes; doing so should not impact the basic pinning functionality.</p>
<ul>
<li><code>PinStatus.meta[progress]</code>&#x3a; Progress (as percent value) of an ongoing pinning operation, if possible to tell</li>
<li><code>PinStatus.meta[fail_reason]</code>&#x3a; A service-specific reason why a pin operation failed (e.g. lack of funds, DAG too big, etc.)</li>
<li><code>PinStatus.meta[receivers] = ['multiaddr1','multiaddr2']</code>&#x3a; A list of peers to which the user can connect in order to speed up transfer of pinned data</li>
<li><code>Pin.meta[replication]</code>&#x3a; This attribute could define how many copies a pinning service should keep</li>
<li><code>Pin.meta[providers] = ['multiaddr1','multiaddr2']</code>&#x3a; A list of peers that are known to have pinned data</li>
</ul>
<p>While these attributes can be vendor-specific, we encourage the community at large to leverage these <code>meta</code> attributes as a sandbox to come up with conventions that could become part of future revisions of this API.</p> 
<h1>Authorization</h1>
<p>An opaque authorization token is required to be sent with each request. There are two ways of doing so&#x3a;</p>
<ol>
<li>Using an HTTP header&#x3a; <code>Authorization&#x3a; Bearer <auth></code></li>
<li>Using a query parameter&#x3a; <code>&auth=<auth></code></li>
</ol>
"

servers:
  - url: https://api.example.com

paths:
  /pins:
    get:
      summary: List pin objects
      description: List all the pin objects and their status, matching optional parameters.
      tags:
        - pins
      parameters:
        - $ref: '#/components/parameters/cid'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PinStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Add an array of pin objects
      description: Add an array of pin objects for the current user.
      tags:
        - pins
      parameters:
        - $ref: '#/components/parameters/auth'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Pin'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PinStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/InsufficientFunds'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /pins/{cid-of-pin-object}:
    parameters:
      - name: cid-of-pin-object
        in: path
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/auth'
    get:
      summary: Get pin object
      description: Get a pin object and its status.
      tags:
        - pins
      parameters:
        - $ref: '#/components/parameters/auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Modify pin object
      description: Modify an existing pin object.
      tags:
        - pins
      parameters:
        - $ref: '#/components/parameters/auth'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Pin'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/InsufficientFunds'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Remove pin object
      description: Remove a pin object.
      tags:
        - pins
      parameters:
        - $ref: '#/components/parameters/auth'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:

    PinStatus:
      description: pin object with status
      type: object
      required:
        - id
        - status
        - pin
      properties:
        id:
          description: CID of pin object; can be used to check status of ongoing pinning
          type: string
        status:
          $ref: '#/components/schemas/Status'
        pin:
          $ref: '#/components/schemas/Pin'
        meta:
          $ref: '#/components/schemas/Meta'

    Pin:
      description: pin object
      type: object
      required:
        - cid
      properties:
        cid:
          description: CID to be pinned
          type: string
        meta:
          $ref: '#/components/schemas/Meta'

    Status:
      description: status a pin object can have at a pinning service
      type: string
      enum:
        - resolving  # pinning in progress: verifying pin request and looking for providers
        - retrieving # pinning in progress: connected to at least one provider and fetched at least one block
        - pinned     # pinned successfully
        - failed     # pining service was unable to finish pinning operation; details can be found in meta[fail_reason]
        - expired    # (optional) still pinned for some time, but ran out of funds and won't be provided to the IPFS network
        - unpinning  # (optional) unpinning in progress

    Meta:
      description: optional metadata
      type: object
      additionalProperties:
        type: string

    Error:
      description: base error object
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string

  parameters:

    skip:
      description: number of items to skip
      name: skip
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 0

    limit:
      description: max records to return
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 1000
        default: 1000

    cid:
      description: return pin objects for the specified CID(s)
      name: cid
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      style: form # ?cid=Qm1,Qm2,bafy3
      explode: false
      examples:
        oneId:
          summary: example of a single CID
          value: [QmbWqxBEKC3P8tqsKc98xmWNzrzDtRLMiMPL8wBuTGsMnR]   # ?cid=Qm
        multipleIds:
          summary: example of multiple CIDs
          value: [QmbWqxBEKC3P8tqsKc98xmWNzrzDtRLMiMPL8wBuTGsMnR,bafkreigtdgsgv2f3bkhsmxvku3bpnnqzubcxeupf7fff5f7l7tlm2v237a]   # ?cid=Qm,bafy

    status:
      description: return pin objects for pins with the specified status
      name: status
      in: query
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Status'
      style: form # ?status=a,b,c
      explode: false

    auth:
      description: optional auth token (alternative to Authorization header)
      name: auth
      in: query
      required: false
      schema:
        type: string

  responses:
    BadRequest:
      description: Bad request (400)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized (401)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: The specified resource was not found (404)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InsufficientFunds:
      description: Insufficient funds (409)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error (500)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    tokenAuth:
      type: http
      scheme: bearer
security:
  - tokenAuth: []
